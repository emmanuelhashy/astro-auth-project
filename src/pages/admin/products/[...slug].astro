---
import MainLayout from "@/layouts/MainLayout.astro";
import { actions } from "astro:actions";

const { slug } = Astro.params;

const { data, error } = await actions.getProductBySlug(slug ?? "");

if (error) {
  return Astro.redirect("/404");
}

const { product, images } = data;
---

<MainLayout title="Product update page">
  <form >
    <input type="hidden" name="id" value={product.id} />
    <div class="flex justify-between items-center">
      <h1>{product.name}</h1>
      <button type="submit" class="bg-black mb-5 p-2 rounded text-white"
        >Save Changes</button
      >
    </div>

    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div>
      <div class="mb-4">
        <label for="name" class="block">Name</label>
        <input
          type="text"
          id="name"
          name="name"
          value={product.name}
          class="w-full p-2 border border-gray-300 rounded"
        />
      </div>
      <div class="mb-4">
        <label for="slug" class="block">Slug</label>
        <input
          type="text"
          id="slug"
          name="slug"
          value={product.slug}
          class="w-full p-2 border border-gray-300 rounded"
        />
      </div>
      <div class="mb-4">
        <label for="description" class="block">Description</label>
        <textarea
          id="description"
          name="description"
          class="w-full p-2 border border-gray-300 rounded"
          rows="8">{product.description}</textarea
        >
      </div>
      </div>

      <div>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-5">
          <div class="mb-4">
            <label for="price" class="block">Daily Charges</label>
            <input
              type="number"
              id="price"
              name="price"
              value={product.price}
              class="w-full p-2 border border-gray-300 rounded"
            />
          </div>
          <div class="mb-4">
            <label for="stock" class="block">Inventory</label>
            <input
              type="number"
              id="stock"
              name="stock"
              value={product.stock}
              class="w-full p-2 border border-gray-300 rounded"
            />
          </div>
        </div>
        <div class="mb-4">
          <label for="brand" class="block">Brand</label>
          <input
            type="text"
            id="brand"
            name="brand"
            value={product.brand}
            class="w-full p-2 border border-gray-300 rounded"
          />
        </div>
        <div class="mb-4">
          <label for="tags" class="block"
            >Tags <small class="text-gray-500">(Separate with comas)</small
            ></label
          >
          <input
            type="text"
            id="tags"
            name="tags"
            value={product.tags}
            class="w-full p-2 border border-gray-300 rounded"
          />
        </div>
  
        <div class="grid grid-cols-2 gap-4">
          <div class="mb-4">
            <label for="tags" class="block">Type</label>
            <select class="w-full p-2 border border-gray-300 rounded" name="type">
              <option value="">[ Select ]</option>
              {
                [
                  "COUPE",
                  "SEDAN",
                  "SPORTS CAR",
                  "CONVERTIBLE",
                  "TRUCK",
                  "STATION WAGON",
                ].map((type) => (
                  <option
                    value={type}
                    class="capitalize"
                    selected={type === product.type}
                  >
                    {type.toUpperCase()}
                  </option>
                ))
              }
            </select>
          </div>
        </div>
      </div>
    </div>
  </form>
</MainLayout>

<script>
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    const form = document.querySelector("form") as HTMLFormElement;

    if (!form) {
      return;
    }

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(form);
      const { data, error } = await actions.updateProduct(formData);

      if (error) {
        return alert(error.message);
      }

      navigate(`/admin/products/${data.slug}`);
    });
  });
</script>
